# Generated by Django 5.2.4 on 2025-07-22 22:19

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import uuid
from decimal import Decimal
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ("auth", "0012_alter_user_first_name_max_length"),
    ]

    operations = [
        migrations.CreateModel(
            name="Category",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        choices=[
                            ("tools", "工具"),
                            ("electronics", "电子产品"),
                            ("garden", "园艺设备"),
                            ("sports", "运动设备"),
                            ("automotive", "汽车用品"),
                            ("home", "家居DIY"),
                        ],
                        max_length=50,
                        unique=True,
                        verbose_name="分类名称",
                    ),
                ),
                (
                    "display_name",
                    models.CharField(max_length=100, verbose_name="显示名称"),
                ),
                ("description", models.TextField(blank=True, verbose_name="分类描述")),
                (
                    "icon",
                    models.CharField(blank=True, max_length=50, verbose_name="图标"),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否激活"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "物品分类",
                "verbose_name_plural": "物品分类",
                "ordering": ["display_name"],
            },
        ),
        migrations.CreateModel(
            name="Location",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "name",
                    models.CharField(
                        max_length=100, unique=True, verbose_name="区域名称"
                    ),
                ),
                (
                    "slug",
                    models.SlugField(
                        max_length=100, unique=True, verbose_name="URL标识"
                    ),
                ),
                ("description", models.TextField(blank=True, verbose_name="区域描述")),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否激活"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
            ],
            options={
                "verbose_name": "地理位置",
                "verbose_name_plural": "地理位置",
                "ordering": ["name"],
            },
        ),
        migrations.CreateModel(
            name="User",
            fields=[
                ("password", models.CharField(max_length=128, verbose_name="password")),
                (
                    "last_login",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="last login"
                    ),
                ),
                (
                    "is_superuser",
                    models.BooleanField(
                        default=False,
                        help_text="Designates that this user has all permissions without explicitly assigning them.",
                        verbose_name="superuser status",
                    ),
                ),
                (
                    "username",
                    models.CharField(
                        error_messages={
                            "unique": "A user with that username already exists."
                        },
                        help_text="Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.",
                        max_length=150,
                        unique=True,
                        validators=[
                            django.contrib.auth.validators.UnicodeUsernameValidator()
                        ],
                        verbose_name="username",
                    ),
                ),
                (
                    "first_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="first name"
                    ),
                ),
                (
                    "last_name",
                    models.CharField(
                        blank=True, max_length=150, verbose_name="last name"
                    ),
                ),
                (
                    "is_staff",
                    models.BooleanField(
                        default=False,
                        help_text="Designates whether the user can log into this admin site.",
                        verbose_name="staff status",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(
                        default=True,
                        help_text="Designates whether this user should be treated as active. Unselect this instead of deleting accounts.",
                        verbose_name="active",
                    ),
                ),
                (
                    "date_joined",
                    models.DateTimeField(
                        default=django.utils.timezone.now, verbose_name="date joined"
                    ),
                ),
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                (
                    "email",
                    models.EmailField(
                        max_length=254, unique=True, verbose_name="邮箱地址"
                    ),
                ),
                (
                    "phone",
                    models.CharField(
                        blank=True, max_length=20, null=True, verbose_name="手机号码"
                    ),
                ),
                (
                    "avatar",
                    models.ImageField(
                        blank=True, null=True, upload_to="avatars/", verbose_name="头像"
                    ),
                ),
                (
                    "bio",
                    models.TextField(
                        blank=True, max_length=500, verbose_name="个人简介"
                    ),
                ),
                (
                    "address",
                    models.CharField(blank=True, max_length=255, verbose_name="地址"),
                ),
                (
                    "is_verified",
                    models.BooleanField(default=False, verbose_name="是否已验证"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="注册时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "groups",
                    models.ManyToManyField(
                        blank=True,
                        help_text="The groups this user belongs to. A user will get all permissions granted to each of their groups.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.group",
                        verbose_name="groups",
                    ),
                ),
                (
                    "user_permissions",
                    models.ManyToManyField(
                        blank=True,
                        help_text="Specific permissions for this user.",
                        related_name="user_set",
                        related_query_name="user",
                        to="auth.permission",
                        verbose_name="user permissions",
                    ),
                ),
            ],
            options={
                "verbose_name": "用户",
                "verbose_name_plural": "用户",
                "db_table": "sharetools_user",
            },
            managers=[
                ("objects", django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name="Cart",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "user",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cart",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="用户",
                    ),
                ),
            ],
            options={
                "verbose_name": "购物车",
                "verbose_name_plural": "购物车",
            },
        ),
        migrations.CreateModel(
            name="Item",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=200, verbose_name="物品标题")),
                ("description", models.TextField(verbose_name="物品描述")),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("draft", "草稿"),
                            ("active", "可租用"),
                            ("rented", "已租出"),
                            ("maintenance", "维护中"),
                            ("inactive", "停用"),
                        ],
                        default="draft",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                (
                    "condition",
                    models.CharField(
                        choices=[
                            ("new", "全新"),
                            ("excellent", "极佳"),
                            ("good", "良好"),
                            ("fair", "一般"),
                            ("poor", "较差"),
                        ],
                        default="good",
                        max_length=20,
                        verbose_name="物品状况",
                    ),
                ),
                (
                    "item_value",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=10,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="物品价值",
                    ),
                ),
                (
                    "address",
                    models.CharField(
                        blank=True, max_length=255, verbose_name="具体地址"
                    ),
                ),
                (
                    "latitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="纬度",
                    ),
                ),
                (
                    "longitude",
                    models.DecimalField(
                        blank=True,
                        decimal_places=6,
                        max_digits=9,
                        null=True,
                        verbose_name="经度",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "published_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="发布时间"
                    ),
                ),
                (
                    "view_count",
                    models.PositiveIntegerField(default=0, verbose_name="浏览次数"),
                ),
                (
                    "booking_count",
                    models.PositiveIntegerField(default=0, verbose_name="预订次数"),
                ),
                (
                    "category",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.category",
                        verbose_name="分类",
                    ),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="owned_items",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="所有者",
                    ),
                ),
                (
                    "location",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.location",
                        verbose_name="所在位置",
                    ),
                ),
            ],
            options={
                "verbose_name": "物品",
                "verbose_name_plural": "物品",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="Booking",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("start_date", models.DateField(verbose_name="开始日期")),
                ("end_date", models.DateField(verbose_name="结束日期")),
                (
                    "duration_days",
                    models.PositiveSmallIntegerField(verbose_name="租期天数"),
                ),
                (
                    "daily_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="日租金"
                    ),
                ),
                (
                    "total_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=10, verbose_name="总价格"
                    ),
                ),
                (
                    "security_deposit",
                    models.DecimalField(
                        decimal_places=2,
                        default=Decimal("0.00"),
                        max_digits=10,
                        verbose_name="押金",
                    ),
                ),
                (
                    "status",
                    models.CharField(
                        choices=[
                            ("pending", "待确认"),
                            ("confirmed", "已确认"),
                            ("active", "进行中"),
                            ("completed", "已完成"),
                            ("cancelled", "已取消"),
                            ("disputed", "有争议"),
                        ],
                        default="pending",
                        max_length=20,
                        verbose_name="状态",
                    ),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "confirmed_at",
                    models.DateTimeField(
                        blank=True, null=True, verbose_name="确认时间"
                    ),
                ),
                (
                    "renter_notes",
                    models.TextField(blank=True, verbose_name="租用者备注"),
                ),
                (
                    "owner_notes",
                    models.TextField(blank=True, verbose_name="所有者备注"),
                ),
                (
                    "owner",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="rental_orders",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="物品所有者",
                    ),
                ),
                (
                    "renter",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookings",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="租用者",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="bookings",
                        to="core.item",
                        verbose_name="物品",
                    ),
                ),
            ],
            options={
                "verbose_name": "预订",
                "verbose_name_plural": "预订",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="ItemImage",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "image",
                    models.ImageField(upload_to="items/%Y/%m/", verbose_name="图片"),
                ),
                (
                    "alt_text",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="图片描述"
                    ),
                ),
                (
                    "order",
                    models.PositiveSmallIntegerField(default=0, verbose_name="排序"),
                ),
                (
                    "is_primary",
                    models.BooleanField(default=False, verbose_name="是否为主图"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="上传时间"),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="images",
                        to="core.item",
                        verbose_name="物品",
                    ),
                ),
            ],
            options={
                "verbose_name": "物品图片",
                "verbose_name_plural": "物品图片",
                "ordering": ["order", "-is_primary"],
            },
        ),
        migrations.CreateModel(
            name="ItemPrice",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "duration_days",
                    models.PositiveSmallIntegerField(
                        choices=[(1, "1天"), (3, "3天"), (7, "7天"), (30, "30天")],
                        verbose_name="租期天数",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        decimal_places=2,
                        max_digits=8,
                        validators=[
                            django.core.validators.MinValueValidator(Decimal("0.01"))
                        ],
                        verbose_name="价格",
                    ),
                ),
                (
                    "is_active",
                    models.BooleanField(default=True, verbose_name="是否激活"),
                ),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="prices",
                        to="core.item",
                        verbose_name="物品",
                    ),
                ),
            ],
            options={
                "verbose_name": "物品价格",
                "verbose_name_plural": "物品价格",
                "ordering": ["duration_days"],
            },
        ),
        migrations.CreateModel(
            name="Review",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                (
                    "rating",
                    models.PositiveSmallIntegerField(
                        choices=[
                            (1, "1星"),
                            (2, "2星"),
                            (3, "3星"),
                            (4, "4星"),
                            (5, "5星"),
                        ],
                        verbose_name="评分",
                    ),
                ),
                (
                    "title",
                    models.CharField(
                        blank=True, max_length=200, verbose_name="评价标题"
                    ),
                ),
                ("content", models.TextField(verbose_name="评价内容")),
                (
                    "created_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="创建时间"),
                ),
                (
                    "updated_at",
                    models.DateTimeField(auto_now=True, verbose_name="更新时间"),
                ),
                (
                    "booking",
                    models.OneToOneField(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="review",
                        to="core.booking",
                        verbose_name="预订",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="reviews",
                        to="core.item",
                        verbose_name="物品",
                    ),
                ),
                (
                    "reviewee",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="received_reviews",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="被评价者",
                    ),
                ),
                (
                    "reviewer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="given_reviews",
                        to=settings.AUTH_USER_MODEL,
                        verbose_name="评价者",
                    ),
                ),
            ],
            options={
                "verbose_name": "评价",
                "verbose_name_plural": "评价",
                "ordering": ["-created_at"],
            },
        ),
        migrations.CreateModel(
            name="CartItem",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("start_date", models.DateField(verbose_name="开始日期")),
                ("end_date", models.DateField(verbose_name="结束日期")),
                (
                    "duration_days",
                    models.PositiveSmallIntegerField(verbose_name="租期天数"),
                ),
                (
                    "daily_price",
                    models.DecimalField(
                        decimal_places=2, max_digits=8, verbose_name="日租金"
                    ),
                ),
                (
                    "added_at",
                    models.DateTimeField(auto_now_add=True, verbose_name="添加时间"),
                ),
                (
                    "cart",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="items",
                        to="core.cart",
                        verbose_name="购物车",
                    ),
                ),
                (
                    "item",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        to="core.item",
                        verbose_name="物品",
                    ),
                ),
            ],
            options={
                "verbose_name": "购物车物品",
                "verbose_name_plural": "购物车物品",
                "unique_together": {("cart", "item")},
            },
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["status", "start_date"], name="core_bookin_status_3f68f6_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["renter", "status"], name="core_bookin_renter__e2ca46_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="booking",
            index=models.Index(
                fields=["owner", "status"], name="core_bookin_owner_i_43c322_idx"
            ),
        ),
        migrations.AlterUniqueTogether(
            name="itemimage",
            unique_together={("item", "order")},
        ),
        migrations.AlterUniqueTogether(
            name="itemprice",
            unique_together={("item", "duration_days")},
        ),
        migrations.AddIndex(
            model_name="item",
            index=models.Index(
                fields=["status", "category"], name="core_item_status_1c4d2b_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="item",
            index=models.Index(
                fields=["location", "status"], name="core_item_locatio_e4d7d4_idx"
            ),
        ),
        migrations.AddIndex(
            model_name="item",
            index=models.Index(
                fields=["-created_at"], name="core_item_created_5368c6_idx"
            ),
        ),
    ]
