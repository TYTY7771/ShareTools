import{a as c,b as N}from"./chunk-Q77VG2BX.js";import{c as J,d as P,e as E,f as C}from"./chunk-HDFA5JOA.js";import{StdioServerTransport as bt}from"@modelcontextprotocol/sdk/server/stdio.js";import{config as xt}from"dotenv";import{resolve as It}from"path";import{config as Ee}from"dotenv";import De from"yargs";import{hideBin as $e}from"yargs/helpers";import{resolve as Z}from"path";function Q(e){return!e||e.length<=4?"****":`****${e.slice(-4)}`}function ee(e){let t=De($e(process.argv)).options({"figma-api-key":{type:"string",description:"Figma API key (Personal Access Token)"},"figma-oauth-token":{type:"string",description:"Figma OAuth Bearer token"},env:{type:"string",description:"Path to custom .env file to load environment variables from"},port:{type:"number",description:"Port to run the server on"},json:{type:"boolean",description:"Output data from tools in JSON format instead of YAML",default:!1},"skip-image-downloads":{type:"boolean",description:"Do not register the download_figma_images tool (skip image downloads)",default:!1}}).help().version("0.5.1").parseSync(),o,r;t.env?(o=Z(t.env),r="cli"):(o=Z(process.cwd(),".env"),r="default"),Ee({path:o,override:!0});let n={figmaApiKey:"",figmaOAuthToken:"",useOAuth:!1},i={port:3333,outputFormat:"yaml",skipImageDownloads:!1,configSources:{figmaApiKey:"env",figmaOAuthToken:"none",port:"default",outputFormat:"default",envFile:r,skipImageDownloads:"default"}};return t["figma-api-key"]?(n.figmaApiKey=t["figma-api-key"],i.configSources.figmaApiKey="cli"):process.env.FIGMA_API_KEY&&(n.figmaApiKey=process.env.FIGMA_API_KEY,i.configSources.figmaApiKey="env"),t["figma-oauth-token"]?(n.figmaOAuthToken=t["figma-oauth-token"],i.configSources.figmaOAuthToken="cli",n.useOAuth=!0):process.env.FIGMA_OAUTH_TOKEN&&(n.figmaOAuthToken=process.env.FIGMA_OAUTH_TOKEN,i.configSources.figmaOAuthToken="env",n.useOAuth=!0),t.port?(i.port=t.port,i.configSources.port="cli"):process.env.PORT&&(i.port=parseInt(process.env.PORT,10),i.configSources.port="env"),t.json?(i.outputFormat="json",i.configSources.outputFormat="cli"):process.env.OUTPUT_FORMAT&&(i.outputFormat=process.env.OUTPUT_FORMAT,i.configSources.outputFormat="env"),t["skip-image-downloads"]?(i.skipImageDownloads=!0,i.configSources.skipImageDownloads="cli"):process.env.SKIP_IMAGE_DOWNLOADS==="true"&&(i.skipImageDownloads=!0,i.configSources.skipImageDownloads="env"),!n.figmaApiKey&&!n.figmaOAuthToken&&(console.error("Either FIGMA_API_KEY or FIGMA_OAUTH_TOKEN is required (via CLI argument or .env file)"),process.exit(1)),e||(console.log(`
Configuration:`),console.log(`- ENV_FILE: ${o} (source: ${i.configSources.envFile})`),n.useOAuth?(console.log(`- FIGMA_OAUTH_TOKEN: ${Q(n.figmaOAuthToken)} (source: ${i.configSources.figmaOAuthToken})`),console.log("- Authentication Method: OAuth Bearer Token")):(console.log(`- FIGMA_API_KEY: ${Q(n.figmaApiKey)} (source: ${i.configSources.figmaApiKey})`),console.log("- Authentication Method: Personal Access Token (X-Figma-Token)")),console.log(`- PORT: ${i.port} (source: ${i.configSources.port})`),console.log(`- OUTPUT_FORMAT: ${i.outputFormat} (source: ${i.configSources.outputFormat})`),console.log(`- SKIP_IMAGE_DOWNLOADS: ${i.skipImageDownloads} (source: ${i.configSources.skipImageDownloads})`),console.log()),{...i,auth:n}}import{randomUUID as Ne}from"node:crypto";import te from"express";import{SSEServerTransport as Ce}from"@modelcontextprotocol/sdk/server/sse.js";import{StreamableHTTPServerTransport as ke}from"@modelcontextprotocol/sdk/server/streamableHttp.js";import{isInitializeRequest as Pe}from"@modelcontextprotocol/sdk/types.js";import"@modelcontextprotocol/sdk/server/mcp.js";var Oe=null,R={streamable:{},sse:{}};async function ne(e,t){let o=te();o.use("/mcp",te.json()),o.post("/mcp",async(n,i)=>{c.log("Received StreamableHTTP request");let s=n.headers["mcp-session-id"],a;if(s&&R.streamable[s])c.log("Reusing existing StreamableHTTP transport for sessionId",s),a=R.streamable[s];else if(!s&&Pe(n.body))c.log("New initialization request for StreamableHTTP sessionId",s),a=new ke({sessionIdGenerator:()=>Ne(),onsessioninitialized:f=>{R.streamable[f]=a}}),a.onclose=()=>{a.sessionId&&delete R.streamable[a.sessionId]},await t.connect(a);else{c.log("Invalid request:",n.body),i.status(400).json({jsonrpc:"2.0",error:{code:-32e3,message:"Bad Request: No valid session ID provided"},id:null});return}let l=null,p=n.body.params?._meta?.progressToken,g=0;p&&(c.log(`Setting up progress notifications for token ${p} on session ${s}`),l=setInterval(async()=>{c.log("Sending progress notification",g),await t.server.notification({method:"notifications/progress",params:{progress:g,progressToken:p}}),g++},1e3)),c.log("Handling StreamableHTTP request"),await a.handleRequest(n,i,n.body),l&&clearInterval(l),c.log("StreamableHTTP request handled")});let r=async(n,i)=>{let s=n.headers["mcp-session-id"];if(!s||!R.streamable[s]){i.status(400).send("Invalid or missing session ID");return}console.log(`Received session termination request for session ${s}`);try{await R.streamable[s].handleRequest(n,i)}catch(a){console.error("Error handling session termination:",a),i.headersSent||i.status(500).send("Error processing session termination")}};o.get("/mcp",r),o.delete("/mcp",r),o.get("/sse",async(n,i)=>{c.log("Establishing new SSE connection");let s=new Ce("/messages",i);c.log(`New SSE connection established for sessionId ${s.sessionId}`),c.log("/sse request headers:",n.headers),c.log("/sse request body:",n.body),R.sse[s.sessionId]=s,i.on("close",()=>{delete R.sse[s.sessionId]}),await t.connect(s)}),o.post("/messages",async(n,i)=>{let s=n.query.sessionId,a=R.sse[s];if(a)c.log(`Received SSE message for sessionId ${s}`),c.log("/messages request headers:",n.headers),c.log("/messages request body:",n.body),await a.handlePostMessage(n,i);else{i.status(400).send(`No transport found for sessionId ${s}`);return}}),Oe=o.listen(e,()=>{c.log(`HTTP server listening on port ${e}`),c.log(`SSE endpoint available at http://localhost:${e}/sse`),c.log(`Message endpoint available at http://localhost:${e}/messages`),c.log(`StreamableHTTP endpoint available at http://localhost:${e}/mcp`)}),process.on("SIGINT",async()=>{c.log("Shutting down server..."),await oe(R.sse),await oe(R.streamable),c.log("Server shutdown complete"),process.exit(0)})}async function oe(e){for(let t in e)try{await e[t]?.close(),delete e[t]}catch(o){console.error(`Error closing transport for session ${t}:`,o)}}import{McpServer as ht}from"@modelcontextprotocol/sdk/server/mcp.js";import j from"path";import Ge from"fs";import ie from"sharp";async function Me(e,t){let{Logger:o}=await import("./logger-RNG6OBLU.js");try{let r=t[0]?.[0]??1,n=t[0]?.[1]??0,i=t[0]?.[2]??0,s=t[1]?.[0]??0,a=t[1]?.[1]??1,l=t[1]?.[2]??0,p=ie(e),g=await p.metadata();if(!g.width||!g.height)throw new Error(`Could not get image dimensions for ${e}`);let{width:f,height:m}=g,u=Math.max(0,Math.round(i*f)),h=Math.max(0,Math.round(l*m)),d=Math.min(f-u,Math.round(r*f)),y=Math.min(m-h,Math.round(a*m));if(d<=0||y<=0)return o.log(`Invalid crop dimensions for ${e}, using original image`),e;let S=e+".tmp";return await p.extract({left:u,top:h,width:d,height:y}).toFile(S),Ge.renameSync(S,e),o.log(`Cropped image saved (overwritten): ${e}`),o.log(`Crop region: ${u}, ${h}, ${d}x${y} from ${f}x${m}`),e}catch(r){return o.error(`Error cropping image ${e}:`,r),e}}async function re(e){let{Logger:t}=await import("./logger-RNG6OBLU.js");try{let o=await ie(e).metadata();if(!o.width||!o.height)throw new Error(`Could not get image dimensions for ${e}`);return{width:o.width,height:o.height}}catch(o){return t.error(`Error getting image dimensions for ${e}:`,o),{width:1e3,height:1e3}}}async function O(e,t,o,r=!1,n,i=!1){let{Logger:s}=await import("./logger-RNG6OBLU.js"),a=[],{downloadFigmaImage:l}=await import("./common-D7KV4EZS.js"),p=await l(e,t,o);s.log(`Downloaded original image: ${p}`);let g=await re(p);s.log(`Original dimensions: ${g.width}x${g.height}`);let f=p,m=!1,u;if(r&&n){s.log("Applying crop transform...");let y=n[0]?.[0]??1,S=n[1]?.[1]??1,w=n[0]?.[2]??0,A=n[1]?.[2]??0,x=Math.max(0,Math.round(w*g.width)),v=Math.max(0,Math.round(A*g.height)),F=Math.min(g.width-x,Math.round(y*g.width)),H=Math.min(g.height-v,Math.round(S*g.height));F>0&&H>0?(u={left:x,top:v,width:F,height:H},f=await Me(p,n),m=!0,s.log(`Cropped to region: ${x}, ${v}, ${F}x${H}`)):s.log("Invalid crop dimensions, keeping original image")}let h=await re(f);s.log(`Final dimensions: ${h.width}x${h.height}`);let d;return i&&(d=Le(h)),{filePath:f,originalDimensions:g,finalDimensions:h,wasCropped:m,cropRegion:u,cssVariables:d,processingLog:a}}function Le({width:e,height:t}){return`--original-width: ${e}px; --original-height: ${t}px;`}import{exec as Be}from"child_process";import{promisify as Ve}from"util";var He=Ve(Be);async function se(e,t={}){try{let o=await fetch(e,t);if(!o.ok)throw new Error(`Fetch failed with status ${o.status}: ${o.statusText}`);return await o.json()}catch(o){c.log(`[fetchWithRetry] Initial fetch failed for ${e}: ${o.message}. Likely a corporate proxy or SSL issue. Attempting curl fallback.`);let n=`curl -s -S --fail-with-body -L ${je(t.headers).join(" ")} "${e}"`;try{c.log(`[fetchWithRetry] Executing curl command: ${n}`);let{stdout:i,stderr:s}=await He(n);if(s){if(!i||s.toLowerCase().includes("error")||s.toLowerCase().includes("fail"))throw new Error(`Curl command failed with stderr: ${s}`);c.log(`[fetchWithRetry] Curl command for ${e} produced stderr (but might be informational): ${s}`)}if(!i)throw new Error("Curl command returned empty stdout.");return JSON.parse(i)}catch(i){throw c.error(`[fetchWithRetry] Curl fallback also failed for ${e}: ${i.message}`),o}}}function je(e){return e?Object.entries(e).map(([t,o])=>`-H "${t}: ${o}"`):[]}var G=class{apiKey;oauthToken;useOAuth;baseUrl="https://api.figma.com/v1";constructor({figmaApiKey:t,figmaOAuthToken:o,useOAuth:r}){this.apiKey=t||"",this.oauthToken=o||"",this.useOAuth=!!r&&!!this.oauthToken}getAuthHeaders(){return this.useOAuth?(c.log("Using OAuth Bearer token for authentication"),{Authorization:`Bearer ${this.oauthToken}`}):(c.log("Using Personal Access Token for authentication"),{"X-Figma-Token":this.apiKey})}filterValidImages(t){return t?Object.fromEntries(Object.entries(t).filter(([,o])=>!!o)):{}}async request(t){try{c.log(`Calling ${this.baseUrl}${t}`);let o=this.getAuthHeaders();return await se(`${this.baseUrl}${t}`,{headers:o})}catch(o){let r=o instanceof Error?o.message:String(o);throw new Error(`Failed to make request to Figma API endpoint '${t}': ${r}`)}}buildSvgQueryParams(t,o){return new URLSearchParams({ids:t.join(","),format:"svg",svg_outline_text:String(o.outlineText),svg_include_id:String(o.includeId),svg_simplify_stroke:String(o.simplifyStroke)}).toString()}async getImageFillUrls(t){let o=`/files/${t}/images`;return(await this.request(o)).meta.images||{}}async getNodeRenderUrls(t,o,r,n={}){if(o.length===0)return{};if(r==="png"){let i=n.pngScale||2,s=`/images/${t}?ids=${o.join(",")}&format=png&scale=${i}`,a=await this.request(s);return this.filterValidImages(a.images)}else{let i=n.svgOptions||{outlineText:!0,includeId:!1,simplifyStroke:!0},s=this.buildSvgQueryParams(o,i),a=`/images/${t}?${s}`,l=await this.request(a);return this.filterValidImages(l.images)}}async downloadImages(t,o,r,n={}){if(r.length===0)return[];let i=j.normalize(o).replace(/^(\.\.(\/|\\|$))+/,""),s=j.resolve(i);if(!s.startsWith(j.resolve(process.cwd())))throw new Error("Invalid path specified. Directory traversal is not allowed.");let{pngScale:a=2,svgOptions:l}=n,p=[],g=r.filter(u=>!!u.imageRef),f=r.filter(u=>!!u.nodeId);if(g.length>0){let u=await this.getImageFillUrls(t),h=g.map(({imageRef:d,fileName:y,needsCropping:S,cropTransform:w,requiresImageDimensions:A})=>{let x=u[d];return x?O(y,s,x,S,w,A):null}).filter(d=>d!==null);h.length>0&&p.push(Promise.all(h))}if(f.length>0){let u=f.filter(d=>!d.fileName.toLowerCase().endsWith(".svg")),h=f.filter(d=>d.fileName.toLowerCase().endsWith(".svg"));if(u.length>0){let d=await this.getNodeRenderUrls(t,u.map(S=>S.nodeId),"png",{pngScale:a}),y=u.map(({nodeId:S,fileName:w,needsCropping:A,cropTransform:x,requiresImageDimensions:v})=>{let F=d[S];return F?O(w,s,F,A,x,v):null}).filter(S=>S!==null);y.length>0&&p.push(Promise.all(y))}if(h.length>0){let d=await this.getNodeRenderUrls(t,h.map(S=>S.nodeId),"svg",{svgOptions:l}),y=h.map(({nodeId:S,fileName:w,needsCropping:A,cropTransform:x,requiresImageDimensions:v})=>{let F=d[S];return F?O(w,s,F,A,x,v):null}).filter(S=>S!==null);y.length>0&&p.push(Promise.all(y))}}return(await Promise.all(p)).flat()}async getRawFile(t,o){let r=`/files/${t}${o?`?depth=${o}`:""}`;c.log(`Retrieving raw Figma file: ${t} (depth: ${o??"default"})`);let n=await this.request(r);return N("figma-raw.json",n),n}async getRawNode(t,o,r){let n=`/files/${t}/nodes?ids=${o}${r?`&depth=${r}`:""}`;c.log(`Retrieving raw Figma node: ${o} from ${t} (depth: ${r??"default"})`);let i=await this.request(n);return N("figma-raw.json",i),i}};import{z as V}from"zod";import{isTruthy as ae}from"remeda";function b(e,t,o){if(!(typeof t=="object"&&t!==null)||!(e in t))return!1;let n=t[e];return o?o(n):n!==void 0}function M(e){return typeof e=="object"&&!!e&&"clipsContent"in e&&typeof e.clipsContent=="boolean"}function _(e){return typeof e=="object"&&!!e&&"absoluteBoundingBox"in e&&typeof e.absoluteBoundingBox=="object"&&!!e.absoluteBoundingBox&&"x"in e.absoluteBoundingBox&&"y"in e.absoluteBoundingBox&&"width"in e.absoluteBoundingBox&&"height"in e.absoluteBoundingBox}function le(e,t){let o=["HORIZONTAL","VERTICAL"];return M(t)&&o.includes(t.layoutMode??"NONE")&&_(e)&&e.layoutPositioning!=="ABSOLUTE"}function ce(e){return typeof e=="object"&&e!==null&&"top"in e&&"right"in e&&"bottom"in e&&"left"in e}function me(e,t){let o=t;return typeof t=="object"&&!!t&&e in o&&typeof o[e]=="object"&&!!o[e]&&"x"in o[e]&&"y"in o[e]&&"width"in o[e]&&"height"in o[e]}function ge(e){return Array.isArray(e)&&e.length===4&&e.every(t=>typeof t=="number")}function U(e,t,o={},r={styles:{}}){let n={globalVars:r,currentDepth:0};return{nodes:e.filter(s=>z(s,o)).map(s=>pe(s,t,n,o)).filter(s=>s!==null),globalVars:n.globalVars}}function pe(e,t,o,r){if(!z(e,r))return null;let n={id:e.id,name:e.name,type:e.type==="VECTOR"?"IMAGE-SVG":e.type};for(let i of t)i(e,n,o);if(_e(e,o,r)){let i={...o,currentDepth:o.currentDepth+1,parent:e};if(b("children",e)&&e.children.length>0){let s=e.children.filter(a=>z(a,r)).map(a=>pe(a,t,i,r)).filter(a=>a!==null);s.length>0&&(n.children=s)}}return n}function z(e,t){return!(!E(e)||t.nodeFilter&&!t.nodeFilter(e))}function _e(e,t,o){return!(o.maxDepth!==void 0&&t.currentDepth>=o.maxDepth)}function ue(e){return Object.fromEntries(Object.entries(e).map(([t,o])=>[t,{id:t,key:o.key,name:o.name,componentSetId:o.componentSetId}]))}function de(e){return Object.fromEntries(Object.entries(e).map(([t,o])=>[t,{id:t,key:o.key,name:o.name,description:o.description}]))}function q(e,t,o={}){let{metadata:r,rawNodes:n,components:i,componentSets:s}=ze(e),a={styles:{}},{nodes:l,globalVars:p}=U(n,t,o,a);return{...r,nodes:l,components:ue(i),componentSets:de(s),globalVars:p}}function ze(e){let t={},o={},r;if("nodes"in e){let a=Object.values(e.nodes);a.forEach(l=>{l.components&&Object.assign(t,l.components),l.componentSets&&Object.assign(o,l.componentSets)}),r=a.map(l=>l.document).filter(E)}else Object.assign(t,e.components),Object.assign(o,e.componentSets),r=e.document.children.filter(E);let{name:n,lastModified:i,thumbnailUrl:s}=e;return{metadata:{name:n,lastModified:i,thumbnailUrl:s||""},rawNodes:r,components:t,componentSets:o}}function ye(e,t){let o=We(e),r=Ke(e,t,o.mode)||{};return{...o,...r}}function fe(e,t){if(t&&t.mode!=="none"){let{children:o,mode:r,axis:n}=t,i=qe(n,r);if(o.length>0&&o.reduce((a,l)=>a?"layoutPositioning"in l&&l.layoutPositioning==="ABSOLUTE"?!0:i==="horizontal"?"layoutSizingHorizontal"in l&&l.layoutSizingHorizontal==="FILL":i==="vertical"?"layoutSizingVertical"in l&&l.layoutSizingVertical==="FILL":!1:!1,!0))return"stretch"}switch(e){case"MIN":return;case"MAX":return"flex-end";case"CENTER":return"center";case"SPACE_BETWEEN":return"space-between";case"BASELINE":return"baseline";default:return}}function Ue(e){switch(e){case"MIN":return;case"MAX":return"flex-end";case"CENTER":return"center";case"STRETCH":return"stretch";default:return}}function he(e){if(e==="FIXED")return"fixed";if(e==="FILL")return"fill";if(e==="HUG")return"hug"}function qe(e,t){switch(e){case"primary":switch(t){case"row":return"horizontal";case"column":return"vertical"}case"counter":switch(t){case"row":return"horizontal";case"column":return"vertical"}}}function We(e){if(!M(e))return{mode:"none"};let t={mode:!e.layoutMode||e.layoutMode==="NONE"?"none":e.layoutMode==="HORIZONTAL"?"row":"column"},o=[];return e.overflowDirection?.includes("HORIZONTAL")&&o.push("x"),e.overflowDirection?.includes("VERTICAL")&&o.push("y"),o.length>0&&(t.overflowScroll=o),t.mode==="none"||(t.justifyContent=fe(e.primaryAxisAlignItems??"MIN",{children:e.children,axis:"primary",mode:t.mode}),t.alignItems=fe(e.counterAxisAlignItems??"MIN",{children:e.children,axis:"counter",mode:t.mode}),t.alignSelf=Ue(e.layoutAlign),t.wrap=e.layoutWrap==="WRAP"?!0:void 0,t.gap=e.itemSpacing?`${e.itemSpacing??0}px`:void 0,(e.paddingTop||e.paddingBottom||e.paddingLeft||e.paddingRight)&&(t.padding=P({top:e.paddingTop??0,right:e.paddingRight??0,bottom:e.paddingBottom??0,left:e.paddingLeft??0}))),t}function Ke(e,t,o){if(!_(e))return;let r={mode:o};if(r.sizing={horizontal:he(e.layoutSizingHorizontal),vertical:he(e.layoutSizingVertical)},M(t)&&!le(e,t)&&(e.layoutPositioning==="ABSOLUTE"&&(r.position="absolute"),e.absoluteBoundingBox&&t.absoluteBoundingBox&&(r.locationRelativeToParent={x:C(e.absoluteBoundingBox.x-t.absoluteBoundingBox.x),y:C(e.absoluteBoundingBox.y-t.absoluteBoundingBox.y)})),me("absoluteBoundingBox",e)){let n={};o==="row"?(!e.layoutGrow&&e.layoutSizingHorizontal=="FIXED"&&(n.width=e.absoluteBoundingBox.width),e.layoutAlign!=="STRETCH"&&e.layoutSizingVertical=="FIXED"&&(n.height=e.absoluteBoundingBox.height)):o==="column"?(e.layoutAlign!=="STRETCH"&&e.layoutSizingHorizontal=="FIXED"&&(n.width=e.absoluteBoundingBox.width),!e.layoutGrow&&e.layoutSizingVertical=="FIXED"&&(n.height=e.absoluteBoundingBox.height),e.preserveRatio&&(n.aspectRatio=e.absoluteBoundingBox?.width/e.absoluteBoundingBox?.height)):((!e.layoutSizingHorizontal||e.layoutSizingHorizontal==="FIXED")&&(n.width=e.absoluteBoundingBox.width),(!e.layoutSizingVertical||e.layoutSizingVertical==="FIXED")&&(n.height=e.absoluteBoundingBox.height)),Object.keys(n).length>0&&(n.width&&(n.width=C(n.width)),n.height&&(n.height=C(n.height)),r.dimensions=n)}return r}function Xe(e,t,o){let r=t;switch(e){case"FILL":return{css:r?{backgroundSize:"cover",backgroundRepeat:"no-repeat",isBackground:!0}:{objectFit:"cover",isBackground:!1},processing:{needsCropping:!1,requiresImageDimensions:!1}};case"FIT":return{css:r?{backgroundSize:"contain",backgroundRepeat:"no-repeat",isBackground:!0}:{objectFit:"contain",isBackground:!1},processing:{needsCropping:!1,requiresImageDimensions:!1}};case"TILE":return{css:{backgroundRepeat:"repeat",backgroundSize:o?`calc(var(--original-width) * ${o}) calc(var(--original-height) * ${o})`:"auto",isBackground:!0},processing:{needsCropping:!1,requiresImageDimensions:!0}};case"STRETCH":return{css:r?{backgroundSize:"100% 100%",backgroundRepeat:"no-repeat",isBackground:!0}:{objectFit:"fill",isBackground:!1},processing:{needsCropping:!1,requiresImageDimensions:!1}};default:return{css:{},processing:{needsCropping:!1,requiresImageDimensions:!1}}}}function Ye(e){let o=e.flat().reduce((r,n)=>{let i=n.toString();for(let s=0;s<i.length;s++)r=(r<<5)-r+i.charCodeAt(s)&4294967295;return r},0);return Math.abs(o).toString(16).substring(0,6)}function Je(e){let t=Ye(e);return{needsCropping:!0,requiresImageDimensions:!1,cropTransform:e,filenameSuffix:`${t}`}}function Se(e,t=!1){let o={colors:[]};return b("strokes",e)&&Array.isArray(e.strokes)&&e.strokes.length&&(o.colors=e.strokes.filter(E).map(r=>W(r,t))),b("strokeWeight",e)&&typeof e.strokeWeight=="number"&&e.strokeWeight>0&&(o.strokeWeight=`${e.strokeWeight}px`),b("strokeDashes",e)&&Array.isArray(e.strokeDashes)&&e.strokeDashes.length&&(o.strokeDashes=e.strokeDashes),b("individualStrokeWeights",e,ce)&&(o.strokeWeight=P(e.individualStrokeWeights)),o}function W(e,t=!1){if(e.type==="IMAGE"){let o={type:"IMAGE",imageRef:e.imageRef,scaleMode:e.scaleMode,scalingFactor:e.scalingFactor},r=t||o.scaleMode==="TILE",{css:n,processing:i}=Xe(o.scaleMode,r,e.scalingFactor),s=i;if(e.imageTransform){let a=Je(e.imageTransform);s={...i,...a,requiresImageDimensions:i.requiresImageDimensions||a.requiresImageDimensions}}return{...o,...n,imageDownloadArguments:s}}else if(e.type==="SOLID"){let{hex:o,opacity:r}=Qe(e.color,e.opacity);return r===1?o:T(e.color,r)}else{if(e.type==="PATTERN")return Ze(e);if(["GRADIENT_LINEAR","GRADIENT_RADIAL","GRADIENT_ANGULAR","GRADIENT_DIAMOND"].includes(e.type))return{type:e.type,gradient:st(e)};throw new Error(`Unknown paint type: ${e.type}`)}}function Ze(e){let t="repeat",o="left";switch(e.horizontalAlignment){case"START":o="left";break;case"CENTER":o="center";break;case"END":o="right";break}let r="top";switch(e.verticalAlignment){case"START":r="top";break;case"CENTER":r="center";break;case"END":r="bottom";break}return{type:e.type,patternSource:{type:"IMAGE-PNG",nodeId:e.sourceNodeId},backgroundRepeat:t,backgroundSize:`${Math.round(e.scalingFactor*100)}%`,backgroundPosition:`${o} ${r}`}}function Qe(e,t=1){let o=Math.round(e.r*255),r=Math.round(e.g*255),n=Math.round(e.b*255),i=Math.round(t*e.a*100)/100;return{hex:"#"+((1<<24)+(o<<16)+(r<<8)+n).toString(16).slice(1).toUpperCase(),opacity:i}}function T(e,t=1){let o=Math.round(e.r*255),r=Math.round(e.g*255),n=Math.round(e.b*255),i=Math.round(t*e.a*100)/100;return`rgba(${o}, ${r}, ${n}, ${i})`}function et(e,t={width:1,height:1}){let o=e.gradientHandlePositions;if(!o||o.length<2)return{stops:e.gradientStops.map(({position:a,color:l})=>`${T(l,1)} ${Math.round(a*100)}%`).join(", "),cssGeometry:"0deg"};let[r,n,i]=o;switch(e.type){case"GRADIENT_LINEAR":return tt(e.gradientStops,r,n,t);case"GRADIENT_RADIAL":return nt(e.gradientStops,r,n,i,t);case"GRADIENT_ANGULAR":return rt(e.gradientStops,r,n,i,t);case"GRADIENT_DIAMOND":return it(e.gradientStops,r,n,i,t);default:return{stops:e.gradientStops.map(({position:a,color:l})=>`${T(l,1)} ${Math.round(a*100)}%`).join(", "),cssGeometry:"0deg"}}}function tt(e,t,o,r){let n=o.x-t.x,i=o.y-t.y;if(Math.sqrt(n*n+i*i)===0)return{stops:e.map(({position:f,color:m})=>`${T(m,1)} ${Math.round(f*100)}%`).join(", "),cssGeometry:"0deg"};let a=Math.atan2(i,n)*(180/Math.PI)+90,l=ot(t,o);if(l.length>=2){let g=Math.min(l[0],l[1]),f=Math.max(l[0],l[1]),m=f-g;return{stops:e.map(({position:h,color:d})=>{let y=T(d,1),A=(h*1+0-g)/(f-g),x=Math.max(0,Math.min(1,A));return`${y} ${Math.round(x*100)}%`}).join(", "),cssGeometry:`${Math.round(a)}deg`}}return{stops:e.map(({position:g,color:f})=>`${T(f,1)} ${Math.round(g*100)}%`).join(", "),cssGeometry:`${Math.round(a)}deg`}}function ot(e,t){let o=t.x-e.x,r=t.y-e.y;if(Math.abs(o)<1e-10&&Math.abs(r)<1e-10)return[];let n=[];if(Math.abs(r)>1e-10){let s=-e.y/r,a=e.x+s*o;a>=0&&a<=1&&n.push(s)}if(Math.abs(r)>1e-10){let s=(1-e.y)/r,a=e.x+s*o;a>=0&&a<=1&&n.push(s)}if(Math.abs(o)>1e-10){let s=-e.x/o,a=e.y+s*r;a>=0&&a<=1&&n.push(s)}if(Math.abs(o)>1e-10){let s=(1-e.x)/o,a=e.y+s*r;a>=0&&a<=1&&n.push(s)}return[...new Set(n.map(s=>Math.round(s*1e6)/1e6))].sort((s,a)=>s-a)}function nt(e,t,o,r,n){let i=Math.round(t.x*100),s=Math.round(t.y*100);return{stops:e.map(({position:l,color:p})=>`${T(p,1)} ${Math.round(l*100)}%`).join(", "),cssGeometry:`circle at ${i}% ${s}%`}}function rt(e,t,o,r,n){let i=Math.round(t.x*100),s=Math.round(t.y*100),a=Math.atan2(o.y-t.y,o.x-t.x)*(180/Math.PI)+90;return{stops:e.map(({position:p,color:g})=>`${T(g,1)} ${Math.round(p*100)}%`).join(", "),cssGeometry:`from ${Math.round(a)}deg at ${i}% ${s}%`}}function it(e,t,o,r,n){let i=Math.round(t.x*100),s=Math.round(t.y*100);return{stops:e.map(({position:l,color:p})=>`${T(p,1)} ${Math.round(l*100)}%`).join(", "),cssGeometry:`ellipse at ${i}% ${s}%`}}function st(e){let t={...e,gradientStops:[...e.gradientStops].sort((n,i)=>n.position-i.position)},{stops:o,cssGeometry:r}=et(t);switch(e.type){case"GRADIENT_LINEAR":return`linear-gradient(${r}, ${o})`;case"GRADIENT_RADIAL":return`radial-gradient(${r}, ${o})`;case"GRADIENT_ANGULAR":return`conic-gradient(${r}, ${o})`;case"GRADIENT_DIAMOND":return`radial-gradient(${r}, ${o})`;default:return`linear-gradient(0deg, ${o})`}}function xe(e){if(!b("effects",e))return{};let t=e.effects.filter(l=>l.visible),o=t.filter(l=>l.type==="DROP_SHADOW").map(at),r=t.filter(l=>l.type==="INNER_SHADOW").map(lt),n=[...o,...r].join(", "),i=t.filter(l=>l.type==="LAYER_BLUR").map(be).join(" "),s=t.filter(l=>l.type==="BACKGROUND_BLUR").map(be).join(" "),a={};return n&&(e.type==="TEXT"?a.textShadow=n:a.boxShadow=n),i&&(a.filter=i),s&&(a.backdropFilter=s),a}function at(e){return`${e.offset.x}px ${e.offset.y}px ${e.radius}px ${e.spread??0}px ${T(e.color)}`}function lt(e){return`inset ${e.offset.x}px ${e.offset.y}px ${e.radius}px ${e.spread??0}px ${T(e.color)}`}function be(e){return`blur(${e.radius}px)`}function Ie(e){return e.type==="TEXT"}function K(e){return b("style",e)&&Object.keys(e.style).length>0}function Te(e){if(b("characters",e,ae))return e.characters}function we(e){if(K(e)){let t=e.style;return{fontFamily:t.fontFamily,fontWeight:t.fontWeight,fontSize:t.fontSize,lineHeight:"lineHeightPx"in t&&t.lineHeightPx&&t.fontSize?`${t.lineHeightPx/t.fontSize}em`:void 0,letterSpacing:t.letterSpacing&&t.letterSpacing!==0&&t.fontSize?`${t.letterSpacing/t.fontSize*100}%`:void 0,textCase:t.textCase,textAlignHorizontal:t.textAlignHorizontal,textAlignVertical:t.textAlignVertical}}}function k(e,t,o){let[r]=Object.entries(e.styles).find(([i,s])=>JSON.stringify(s)===JSON.stringify(t))??[];if(r)return r;let n=J(o);return e.styles[n]=t,n}var L=(e,t,o)=>{let r=ye(e,o.parent);Object.keys(r).length>1&&(t.layout=k(o.globalVars,r,"layout"))},B=(e,t,o)=>{if(Ie(e)&&(t.text=Te(e)),K(e)){let r=we(e);t.textStyle=k(o.globalVars,r,"style")}},X=(e,t,o)=>{let r=b("children",e)&&Array.isArray(e.children)&&e.children.length>0;if(b("fills",e)&&Array.isArray(e.fills)&&e.fills.length){let s=e.fills.map(a=>W(a,r)).reverse();t.fills=k(o.globalVars,s,"fill")}let n=Se(e,r);n.colors.length&&(t.strokes=k(o.globalVars,n,"stroke"));let i=xe(e);Object.keys(i).length&&(t.effects=k(o.globalVars,i,"effect")),b("opacity",e)&&typeof e.opacity=="number"&&e.opacity!==1&&(t.opacity=e.opacity),b("cornerRadius",e)&&typeof e.cornerRadius=="number"&&(t.borderRadius=`${e.cornerRadius}px`),b("rectangleCornerRadii",e,ge)&&(t.borderRadius=`${e.rectangleCornerRadii[0]}px ${e.rectangleCornerRadii[1]}px ${e.rectangleCornerRadii[2]}px ${e.rectangleCornerRadii[3]}px`)},Ae=(e,t,o)=>{e.type==="INSTANCE"&&(b("componentId",e)&&(t.componentId=e.componentId),b("componentProperties",e)&&(t.componentProperties=Object.entries(e.componentProperties??{}).map(([r,{value:n,type:i}])=>({name:r,value:n.toString(),type:i}))))},Y=[L,B,X,Ae],ct=[L,B],mt=[B],gt=[X],pt=[L];import ut from"js-yaml";var Re={fileKey:V.string().describe("The key of the Figma file to fetch, often found in a provided URL like figma.com/(file|design)/<fileKey>/..."),nodeId:V.string().optional().describe("The ID of the node to fetch, often found as URL parameter node-id=<nodeId>, always use if provided"),depth:V.number().optional().describe("OPTIONAL. Do NOT use unless explicitly requested by the user. Controls how many levels deep to traverse the node tree.")},Go=V.object(Re);async function dt(e,t,o){try{let{fileKey:r,nodeId:n,depth:i}=e;c.log(`Fetching ${i?`${i} layers deep`:"all layers"} of ${n?`node ${n} from file`:"full file"} ${r}`);let s;n?s=await t.getRawNode(r,n,i):s=await t.getRawFile(r,i);let a=q(s,Y,{maxDepth:i});N("figma-simplified.json",a),c.log(`Successfully extracted data: ${a.nodes.length} nodes, ${Object.keys(a.globalVars.styles).length} styles`);let{nodes:l,globalVars:p,...g}=a,f={metadata:g,nodes:l,globalVars:p};c.log(`Generating ${o.toUpperCase()} result from extracted data`);let m=o==="json"?JSON.stringify(f,null,2):ut.dump(f);return c.log("Sending result to client"),{content:[{type:"text",text:m}]}}catch(r){let n=r instanceof Error?r.message:JSON.stringify(r);return c.error(`Error fetching file ${e.fileKey}:`,n),{isError:!0,content:[{type:"text",text:`Error fetching file: ${n}`}]}}}var D={name:"get_figma_data",description:"Get comprehensive Figma file data including layout, content, visuals, and component information",parameters:Re,handler:dt};import{z as I}from"zod";var Fe={fileKey:I.string().regex(/^[a-zA-Z0-9]+$/,"File key must be alphanumeric").describe("The key of the Figma file containing the images"),nodes:I.object({nodeId:I.string().regex(/^\d+:\d+$/,"Node ID must be in the format of 'number:number'").describe("The ID of the Figma image node to fetch, formatted as 1234:5678"),imageRef:I.string().optional().describe("If a node has an imageRef fill, you must include this variable. Leave blank when downloading Vector SVG images."),fileName:I.string().regex(/^[a-zA-Z0-9_.-]+$/,"File name can only contain alphanumeric characters, underscores, dots, and hyphens").describe("The local name for saving the fetched file, including extension. Either png or svg."),needsCropping:I.boolean().optional().describe("Whether this image needs cropping based on its transform matrix"),cropTransform:I.array(I.array(I.number())).optional().describe("Figma transform matrix for image cropping"),requiresImageDimensions:I.boolean().optional().describe("Whether this image requires dimension information for CSS variables"),filenameSuffix:I.string().optional().describe("Suffix to add to filename for unique cropped images, provided in the Figma data (e.g., 'abc123')")}).array().describe("The nodes to fetch as images"),pngScale:I.number().positive().optional().default(2).describe("Export scale for PNG images. Optional, defaults to 2 if not specified. Affects PNG images only."),localPath:I.string().describe("The absolute path to the directory where images are stored in the project. If the directory does not exist, it will be created. The format of this path should respect the directory format of the operating system you are running on. Don't use any special character escaping in the path name either.")},jo=I.object(Fe);async function ft(e,t){try{let{fileKey:o,nodes:r,localPath:n,pngScale:i=2}=e,s=[],a=new Map,l=new Map;for(let m of r){let u=m.fileName;if(m.filenameSuffix&&!u.includes(m.filenameSuffix)){let d=u.split(".").pop();u=`${u.substring(0,u.lastIndexOf("."))}-${m.filenameSuffix}.${d}`}let h={fileName:u,needsCropping:m.needsCropping||!1,cropTransform:m.cropTransform,requiresImageDimensions:m.requiresImageDimensions||!1};if(m.imageRef){let d=`${m.imageRef}-${m.filenameSuffix||"none"}`;if(!m.filenameSuffix&&l.has(d)){let y=l.get(d),S=a.get(y);S.includes(u)||S.push(u),h.requiresImageDimensions&&(s[y].requiresImageDimensions=!0)}else{let y=s.length;s.push({...h,imageRef:m.imageRef}),a.set(y,[u]),l.set(d,y)}}else{let d=s.length;s.push({...h,nodeId:m.nodeId}),a.set(d,[u])}}let p=await t.downloadImages(o,n,s,{pngScale:i}),g=p.filter(Boolean).length,f=p.map((m,u)=>{let h=m.filePath.split("/").pop()||m.filePath,d=`${m.finalDimensions.width}x${m.finalDimensions.height}`,y=m.wasCropped?" (cropped)":"",S=m.cssVariables?`${d} | ${m.cssVariables}`:d,w=a.get(u)||[h],A=w.length>1?` (also requested as: ${w.filter(x=>x!==h).join(", ")})`:"";return`- ${h}: ${S}${y}${A}`}).join(`
`);return{content:[{type:"text",text:`Downloaded ${g} images:
${f}`}]}}catch(o){return c.error(`Error downloading images from ${e.fileKey}:`,o),{isError:!0,content:[{type:"text",text:`Failed to download images: ${o instanceof Error?o.message:String(o)}`}]}}}var $={name:"download_figma_images",description:"Download SVG and PNG images used in a Figma file based on the IDs of image or icon nodes",parameters:Fe,handler:ft};var yt={name:"Figma MCP Server",version:"0.5.1"};function ve(e,{isHTTP:t=!1,outputFormat:o="yaml",skipImageDownloads:r=!1}={}){let n=new ht(yt),i=new G(e);return St(n,i,{outputFormat:o,skipImageDownloads:r}),c.isHTTP=t,n}function St(e,t,o){e.tool(D.name,D.description,D.parameters,r=>D.handler(r,t,o.outputFormat)),o.skipImageDownloads||e.tool($.name,$.description,$.parameters,r=>$.handler(r,t))}xt({path:It(process.cwd(),".env")});async function Tt(){let e=process.env.NODE_ENV==="cli"||process.argv.includes("--stdio"),t=ee(e),o=ve(t.auth,{isHTTP:!e,outputFormat:t.outputFormat,skipImageDownloads:t.skipImageDownloads});if(e){let r=new bt;await o.connect(r)}else console.log(`Initializing Figma MCP Server in HTTP mode on port ${t.port}...`),await ne(t.port,o)}process.argv[1]&&Tt().catch(e=>{console.error("Failed to start server:",e),process.exit(1)});export{ee as a,U as b,q as c,L as d,B as e,X as f,Ae as g,Y as h,ct as i,mt as j,gt as k,pt as l,ve as m,Tt as n};
