{"version":3,"file":"toLowerCase-BF0sw_7N.js","names":["data: T"],"sources":["../src/toLowerCase.ts"],"sourcesContent":["import { purry } from \"./purry\";\n\n/**\n * Lowers the case of all characters in the input. Uses the built-in [`String.prototype.toLowerCase`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase)\n * for the runtime, and the built-in [`Lowercase`](https://www.typescriptlang.org/docs/handbook/2/template-literal-types.html#lowercasestringtype)\n * utility type for typing.\n *\n * For other case manipulations see: `toUpperCase`, `capitalize`,\n * `uncapitalize`, `toCamelCase`, `toKebabCase`, and `toSnakeCase`.\n *\n * !IMPORTANT: This function might work _incorrectly_ for **non-ascii** inputs.\n * If the output is intended for display (on a browser) consider using\n * [the `text-transform: lowercase;` CSS property](https://developer.mozilla.org/en-US/docs/Web/CSS/text-transform)\n * instead!\n *\n * @param data - A string.\n * @signature\n *   R.toLowerCase(data);\n * @example\n *   R.toLowerCase(\"Hello World\"); // \"hello world\"\n * @dataFirst\n * @category String\n */\nexport function toLowerCase<T extends string>(data: T): Lowercase<T>;\n\n/**\n * Lowers the case of all characters in the input. Uses the built-in [`String.prototype.toLowerCase`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toLowerCase)\n * for the runtime, and the built-in [`Lowercase`](https://www.typescriptlang.org/docs/handbook/2/template-literal-types.html#lowercasestringtype)\n * utility type for typing.\n *\n * For other case manipulations see: `toUpperCase`, `capitalize`,\n * `uncapitalize`, `toCamelCase`, `toKebabCase`, and `toSnakeCase`.\n *\n * !IMPORTANT: This function might work _incorrectly_ for **non-ascii** inputs.\n * If the output is intended for display (on a browser) consider using\n * [the `text-transform\" lowercase;` CSS property](https://developer.mozilla.org/en-US/docs/Web/CSS/text-transform)\n * instead!\n *\n * @signature\n *   R.toLowerCase()(data);\n * @example\n *   R.pipe(\"Hello World\", R.toLowerCase()); // \"hello world\"\n * @dataLast\n * @category String\n */\nexport function toLowerCase(): <T extends string>(data: T) => Lowercase<T>;\n\nexport function toLowerCase(...args: ReadonlyArray<unknown>): unknown {\n  return purry(toLowerCaseImplementation, args);\n}\n\nconst toLowerCaseImplementation = <T extends string>(data: T): Lowercase<T> =>\n  data.toLowerCase() as Lowercase<T>;\n"],"mappings":"4CA+CA,SAAgB,EAAY,GAAG,EAAuC,CACpE,OAAO,EAAM,EAA2B,EAAK,AAC9C,CAED,MAAM,EAA4B,AAAmBA,GACnD,EAAK,aAAa"}