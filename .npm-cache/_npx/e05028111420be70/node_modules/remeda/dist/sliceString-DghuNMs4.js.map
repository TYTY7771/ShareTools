{"version":3,"file":"sliceString-DghuNMs4.js","names":["dataOrIndexStart: number | string","indexStartOrIndexEnd?: number","indexEnd?: number","data: string"],"sources":["../src/sliceString.ts"],"sourcesContent":["/**\n * Extracts a section of this string and returns it as a new string, without\n * modifying the original string. Equivalent to `String.prototype.slice`.\n *\n * @param data - The string to extract from.\n * @param indexStart - The index of the first character to include in the\n * returned substring.\n * @param indexEnd - The index of the first character to exclude from the\n * returned substring.\n * @returns A new string containing the extracted section of the string.\n * @signature\n *    R.sliceString(data, indexStart, indexEnd)\n * @example\n *    R.sliceString(\"abcdefghijkl\", 1) // => `bcdefghijkl`\n *    R.sliceString(\"abcdefghijkl\", 4, 7) // => `efg`\n * @dataLast\n * @category String\n */\nexport function sliceString(\n  data: string,\n  indexStart: number,\n  indexEnd?: number,\n): string;\n\n/**\n * Extracts a section of this string and returns it as a new string, without\n * modifying the original string. Equivalent to `String.prototype.slice`.\n *\n * @param indexStart - The index of the first character to include in the\n * returned substring.\n * @param indexEnd - The index of the first character to exclude from the\n * returned substring, or `undefined` for the rest of the string.\n * @returns A new string containing the extracted section of the string.\n * @signature\n *    R.sliceString(indexStart, indexEnd)(string)\n * @example\n *    R.sliceString(1)(\"abcdefghijkl\") // => `bcdefghijkl`\n *    R.sliceString(4, 7)(\"abcdefghijkl\") // => `efg`\n * @dataLast\n * @category String\n */\nexport function sliceString(\n  indexStart: number,\n  indexEnd?: number,\n): (data: string) => string;\n\nexport function sliceString(\n  dataOrIndexStart: number | string,\n  indexStartOrIndexEnd?: number,\n  indexEnd?: number,\n): unknown {\n  return typeof dataOrIndexStart === \"string\"\n    ? dataOrIndexStart.slice(indexStartOrIndexEnd, indexEnd)\n    : (data: string) => data.slice(dataOrIndexStart, indexStartOrIndexEnd);\n}\n"],"mappings":"AA8CA,SAAgB,EACdA,EACAC,EACAC,EACS,CACT,OAAO,OAAO,GAAqB,SAC/B,EAAiB,MAAM,EAAsB,EAAS,CACtD,AAACC,GAAiB,EAAK,MAAM,EAAkB,EAAqB,AACzE"}