{"version":3,"file":"capitalize-DktTi0gl.js","names":["data: T"],"sources":["../src/capitalize.ts"],"sourcesContent":["import { purry } from \"./purry\";\n\n/**\n * Makes first character of a string upper-case. Uses the built-in\n * [`String.prototype.toUpperCase`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase)\n * for the runtime, and the built-in [`Capitalize`](https://www.typescriptlang.org/docs/handbook/2/template-literal-types.html#capitalizestringtype)\n * utility type for typing.\n *\n * For other case manipulations see: `toUpperCase`, `toLowerCase`,\n * `uncapitalize`, `toCamelCase`, `toKebabCase`, and `toSnakeCase`.\n *\n * !IMPORTANT: This function might work _incorrectly_ for **non-ascii** inputs.\n * If the output is intended for display (on a browser) consider using\n * [the `text-transform: capitalize;` CSS property](https://developer.mozilla.org/en-US/docs/Web/CSS/text-transform)\n * instead!\n *\n * @param data - A string.\n * @signature\n *   R.capitalize(data);\n * @example\n *   R.capitalize(\"hello world\"); // \"Hello world\"\n * @dataFirst\n * @category String\n */\nexport function capitalize<T extends string>(data: T): Capitalize<T>;\n\n/**\n * Makes first character of a string upper-case. Uses the built-in\n * [`String.prototype.toUpperCase`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/toUpperCase)\n * for the runtime, and the built-in [`Capitalize`](https://www.typescriptlang.org/docs/handbook/2/template-literal-types.html#capitalizestringtype)\n * utility type for typing.\n *\n * For other case manipulations see: `toUpperCase`, `toLowerCase`,\n * `uncapitalize`, `toCamelCase`, `toKebabCase`, and `toSnakeCase`.\n *\n * !IMPORTANT: This function might work _incorrectly_ for **non-ascii** inputs.\n * If the output is intended for display (on a browser) consider using\n * [the `text-transform: capitalize;` CSS property](https://developer.mozilla.org/en-US/docs/Web/CSS/text-transform)\n * instead!\n *\n * @signature\n *   R.capitalize()(data);\n * @example\n *   R.pipe(\"hello world\", R.capitalize()); // \"Hello world\"\n * @dataLast\n * @category String\n */\nexport function capitalize(): <T extends string>(data: T) => Capitalize<T>;\n\nexport function capitalize(...args: ReadonlyArray<unknown>): unknown {\n  return purry(capitalizeImplementation, args);\n}\n\nconst capitalizeImplementation = <T extends string>(data: T): Capitalize<T> =>\n  `${data[0]?.toUpperCase() ?? \"\"}${data.slice(1)}` as Capitalize<T>;\n"],"mappings":"4CAiDA,SAAgB,EAAW,GAAG,EAAuC,CACnE,OAAO,EAAM,EAA0B,EAAK,AAC7C,CAED,MAAM,EAA2B,AAAmBA,GAClD,GAAG,EAAK,IAAI,aAAa,EAAI,KAAK,EAAK,MAAM,EAAE,EAAE"}